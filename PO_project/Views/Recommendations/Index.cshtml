@using PO_project.Recommendations
@using Microsoft.AspNetCore.Mvc.TagHelpers
@model RecommendationViewModel[]
<link rel="stylesheet" href="~/css/recomendations_main.css"/>

<h1 class="text-center">Rekomendowane kierunki studiów</h1>
<hr />
<section class="recommendations">
	@if (Model.Length == 0)
	{
		<h3>Brak dostępnych rekomendacji kierunków studiów. Uzupełnij swoje dane do obliczenia wskaźnika rekrutacyjnego oraz wypełnij ankietę. Następnie spróbuj ponownie</h3>
	}
	@foreach (var recommendation in Model)
	{
		<div class="col-md-2 card @GetChancesClass(recommendation.ProbabilityOfAdmission)">
			<a asp-action="Details" asp-controller="Kierunek" asp-route-id="@recommendation.CourseId" class="card-link">
				<article>
					<header>
						<h3>@recommendation.Course</h3>
					</header>
					@if (recommendation.Description == string.Empty)
					{
						<p>-- Brak opisu --</p>
					}
					else
					{
						<p>@recommendation.Description</p>
					}
					@if (Math.Abs(recommendation.AvgPointThreshold - (-1)) < 0.001)
					{
						<p>-- Brak danych dot. historycznych progów punktowych --</p>
					}
					else
					{
						<p>Średni próg punktowy z ubiegłych lat rekrutacji:<strong>@recommendation.AvgPointThreshold</strong></p>
					}
					<p>Twój wskaźnik rekrutacyjny:<strong>@recommendation.CancdidateRecruitmentIndicator</strong></p>
					<footer>
						<p><strong>Szanse dostania się:</strong>@recommendation.ChancesOfGettingIn</p>
					</footer>
				</article>
			</a>
		</div>
	}
</section>

@functions {
    private string GetChancesClass(double probabilityOfAdmission)
    {
        return probabilityOfAdmission switch
	    {
		    var p when p < RecommendationViewModel.Low => "low",
            var p when Math.Abs(p - RecommendationViewModel.Low) < 0.0001 => "mid",
            var p when p > RecommendationViewModel.High => "high",
		    _ => "default",
		    };
    }
}
