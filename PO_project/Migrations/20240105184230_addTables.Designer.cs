// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PO_project.Data;

#nullable disable

namespace PO_project.Migrations
{
    [DbContext(typeof(PwrDbContext))]
    [Migration("20240105184230_addTables")]
    partial class addTables
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PO_project.Models.Adres", b =>
                {
                    b.Property<int>("AdresId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AdresId"));

                    b.Property<string>("BuildingNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AdresId");

                    b.ToTable("Adresy");
                });

            modelBuilder.Entity("PO_project.Models.CzasTrwania", b =>
                {
                    b.Property<int>("CzasTrwaniaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CzasTrwaniaId"));

                    b.Property<double>("Value")
                        .HasColumnType("float");

                    b.HasKey("CzasTrwaniaId");

                    b.ToTable("CzasyTrwania");
                });

            modelBuilder.Entity("PO_project.Models.HistoryczneDane", b =>
                {
                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.Property<int>("KierunekId")
                        .HasColumnType("int");

                    b.Property<double>("CandidatesPerSpot")
                        .HasColumnType("float");

                    b.Property<double>("PointThreshold")
                        .HasColumnType("float");

                    b.HasKey("Year", "KierunekId");

                    b.HasIndex("KierunekId");

                    b.ToTable("HistoryczneDane");
                });

            modelBuilder.Entity("PO_project.Models.Jezyk", b =>
                {
                    b.Property<int>("JezykId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("JezykId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("JezykId");

                    b.ToTable("Jezyki");
                });

            modelBuilder.Entity("PO_project.Models.Kierunek", b =>
                {
                    b.Property<int>("KierunekId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("KierunekId"));

                    b.Property<string>("Abbreviation")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("CzasTrwaniaId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("JezykId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("StopienId")
                        .HasColumnType("int");

                    b.Property<int>("TrybId")
                        .HasColumnType("int");

                    b.HasKey("KierunekId");

                    b.HasIndex("CzasTrwaniaId");

                    b.HasIndex("JezykId");

                    b.HasIndex("StopienId");

                    b.HasIndex("TrybId");

                    b.ToTable("Kierunki");
                });

            modelBuilder.Entity("PO_project.Models.KierunekMiejscaPracy", b =>
                {
                    b.Property<int>("KierunekId")
                        .HasColumnType("int");

                    b.Property<int>("PracodawcaId")
                        .HasColumnType("int");

                    b.HasKey("KierunekId", "PracodawcaId");

                    b.HasIndex("PracodawcaId");

                    b.ToTable("MiejscaPracy");
                });

            modelBuilder.Entity("PO_project.Models.KierunekPerspektywy", b =>
                {
                    b.Property<int>("KierunekId")
                        .HasColumnType("int");

                    b.Property<int>("PracodawcaId")
                        .HasColumnType("int");

                    b.HasKey("KierunekId", "PracodawcaId");

                    b.HasIndex("PracodawcaId");

                    b.ToTable("Perspektywy");
                });

            modelBuilder.Entity("PO_project.Models.KierunekPraktyki", b =>
                {
                    b.Property<int>("KierunekId")
                        .HasColumnType("int");

                    b.Property<int>("PracodawcaId")
                        .HasColumnType("int");

                    b.HasKey("KierunekId", "PracodawcaId");

                    b.HasIndex("PracodawcaId");

                    b.ToTable("Praktyki");
                });

            modelBuilder.Entity("PO_project.Models.Lokalizacja", b =>
                {
                    b.Property<int>("LokalizacjaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LokalizacjaId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LokalizacjaId");

                    b.ToTable("Lokalizacje");
                });

            modelBuilder.Entity("PO_project.Models.Pracodawca", b =>
                {
                    b.Property<int>("PracodawcaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PracodawcaId"));

                    b.Property<int>("AdresId")
                        .HasColumnType("int");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Link")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PracodawcaId");

                    b.HasIndex("AdresId")
                        .IsUnique();

                    b.ToTable("Pracodawcy");
                });

            modelBuilder.Entity("PO_project.Models.Specjalizacja", b =>
                {
                    b.Property<int>("SpecjalizacjaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SpecjalizacjaId"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("KierunekId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("SpecjalizacjaId");

                    b.HasIndex("KierunekId");

                    b.ToTable("Specjalizacje");
                });

            modelBuilder.Entity("PO_project.Models.Stopien", b =>
                {
                    b.Property<int>("StopienId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StopienId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.HasKey("StopienId");

                    b.ToTable("Stopnie");
                });

            modelBuilder.Entity("PO_project.Models.Tryb", b =>
                {
                    b.Property<int>("TrybId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TrybId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("TrybId");

                    b.ToTable("Tryby");
                });

            modelBuilder.Entity("PO_project.Models.Wydzial", b =>
                {
                    b.Property<int>("WydzialId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WydzialId"));

                    b.Property<string>("Abbreviation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LokalizacjaId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("WydzialId");

                    b.HasIndex("LokalizacjaId");

                    b.ToTable("Wydzialy");
                });

            modelBuilder.Entity("PO_project.Models.HistoryczneDane", b =>
                {
                    b.HasOne("PO_project.Models.Kierunek", "Kierunek")
                        .WithMany()
                        .HasForeignKey("KierunekId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kierunek");
                });

            modelBuilder.Entity("PO_project.Models.Kierunek", b =>
                {
                    b.HasOne("PO_project.Models.CzasTrwania", "CzasTrwania")
                        .WithMany()
                        .HasForeignKey("CzasTrwaniaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PO_project.Models.Jezyk", "Jezyk")
                        .WithMany()
                        .HasForeignKey("JezykId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PO_project.Models.Stopien", "Stopien")
                        .WithMany()
                        .HasForeignKey("StopienId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PO_project.Models.Tryb", "Tryb")
                        .WithMany()
                        .HasForeignKey("TrybId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CzasTrwania");

                    b.Navigation("Jezyk");

                    b.Navigation("Stopien");

                    b.Navigation("Tryb");
                });

            modelBuilder.Entity("PO_project.Models.KierunekMiejscaPracy", b =>
                {
                    b.HasOne("PO_project.Models.Kierunek", "Kierunek")
                        .WithMany("MiejscaPracy")
                        .HasForeignKey("KierunekId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PO_project.Models.Pracodawca", "Pracodawca")
                        .WithMany("MiejscaPracy")
                        .HasForeignKey("PracodawcaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kierunek");

                    b.Navigation("Pracodawca");
                });

            modelBuilder.Entity("PO_project.Models.KierunekPerspektywy", b =>
                {
                    b.HasOne("PO_project.Models.Kierunek", "Kierunek")
                        .WithMany("Perpektywy")
                        .HasForeignKey("KierunekId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PO_project.Models.Pracodawca", "Pracodawca")
                        .WithMany("Perpektywy")
                        .HasForeignKey("PracodawcaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kierunek");

                    b.Navigation("Pracodawca");
                });

            modelBuilder.Entity("PO_project.Models.KierunekPraktyki", b =>
                {
                    b.HasOne("PO_project.Models.Kierunek", "Kierunek")
                        .WithMany("Praktyki")
                        .HasForeignKey("KierunekId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PO_project.Models.Pracodawca", "Pracodawca")
                        .WithMany("Praktyki")
                        .HasForeignKey("PracodawcaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kierunek");

                    b.Navigation("Pracodawca");
                });

            modelBuilder.Entity("PO_project.Models.Pracodawca", b =>
                {
                    b.HasOne("PO_project.Models.Adres", "adres")
                        .WithOne("Pracodawca")
                        .HasForeignKey("PO_project.Models.Pracodawca", "AdresId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("adres");
                });

            modelBuilder.Entity("PO_project.Models.Specjalizacja", b =>
                {
                    b.HasOne("PO_project.Models.Kierunek", "kierunek")
                        .WithMany()
                        .HasForeignKey("KierunekId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("kierunek");
                });

            modelBuilder.Entity("PO_project.Models.Wydzial", b =>
                {
                    b.HasOne("PO_project.Models.Lokalizacja", "Lokalizacja")
                        .WithMany()
                        .HasForeignKey("LokalizacjaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Lokalizacja");
                });

            modelBuilder.Entity("PO_project.Models.Adres", b =>
                {
                    b.Navigation("Pracodawca");
                });

            modelBuilder.Entity("PO_project.Models.Kierunek", b =>
                {
                    b.Navigation("MiejscaPracy");

                    b.Navigation("Perpektywy");

                    b.Navigation("Praktyki");
                });

            modelBuilder.Entity("PO_project.Models.Pracodawca", b =>
                {
                    b.Navigation("MiejscaPracy");

                    b.Navigation("Perpektywy");

                    b.Navigation("Praktyki");
                });
#pragma warning restore 612, 618
        }
    }
}
